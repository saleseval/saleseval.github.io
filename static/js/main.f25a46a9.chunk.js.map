{"version":3,"sources":["App.js","reportWebVitals.js","menuItemsData.js","components/Dropdown.js","components/MenuItems.js","components/Navbar.js","components/MobileDropdown.js","components/MobileMenuItems.js","components/MobileNav.js","components/Header.js","routes/root.js","error-page.js","routes/myinfo.js","routes/sales.js","routes/sales-self.js","routes/sales-manager.js","routes/sales-result.js","routes/promo.js","routes/promo-self.js","routes/promo-manager.js","routes/promo-result.js","index.js"],"names":["App","React","createElement","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","menuItemsData","title","url","submenu","Dropdown","submenus","dropdown","className","concat","map","index","key","href","MenuItems","items","depthLevel","setDropdown","useState","ref","useRef","useEffect","handler","event","current","contains","target","document","addEventListener","removeEventListener","onMouseEnter","onMouseLeave","onClick","closeDropdown","Fragment","type","aria-haspopup","aria-expanded","prev","Link","to","Navbar","menu","MobileDropdown","dropdownClass","MobileMenuItems","showMenu","setShowMenu","toggleDropdown","e","stopPropagation","MobileNav","Header","Root","Outlet","ErrorPage","MyInfo","csvData","setCsvData","fetch","res","text","csvText","Papa","parse","complete","data","console","log","header","catch","error","row","JSON","stringify","Sales","SalesSelf","SalesManager","SalesResult","Promo","PromoSelf","PromoManager","PromoResult","router","createBrowserRouter","element","errorElement","children","path","ReactDOM","createRoot","getElementById","render","StrictMode","RouterProvider"],"mappings":"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","file":"static/js/main.f25a46a9.chunk.js","sourcesContent":["import React from 'react';\n\nconst App = () => {\n    return <h1>This is the default page (landing page)</h1>;\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const menuItemsData = [\r\n    {\r\n        title: 'Home',\r\n        url: '/',\r\n    },\r\n    {\r\n        title: '내 정보',\r\n        url: '/myinfo',\r\n    },\r\n    {\r\n        title: '세일즈 역량',\r\n        url: '/sales',\r\n        submenu: [\r\n            {\r\n                title: '본인 평가',\r\n                url: 'sales-self',\r\n            },\r\n            {\r\n                title: '매니저 평가',\r\n                url: 'sales-manager',\r\n            },\r\n            {\r\n                title: '평가 결과 확인',\r\n                url: 'sales-result',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: '승급',\r\n        url: '/promo',\r\n        submenu: [\r\n            {\r\n                title: '본인 평가',\r\n                url: 'promo-self',\r\n            },\r\n            {\r\n                title: '매니저 평가',\r\n                url: 'promo-manager',\r\n            },\r\n            {\r\n                title: '평가 결과 확인',\r\n                url: 'promo-result',\r\n            },\r\n        ],\r\n    },\r\n];","import React from 'react';\r\n\r\nconst Dropdown = ({ submenus, dropdown }) => {\r\n    return (\r\n      <ul className={`dropdown ${dropdown ? \"show\" : \"\"}`}>\r\n        {submenus.map((submenu, index) => (\r\n          <li key={index} className=\"menu-items\">\r\n            <a href={submenu.url}>{submenu.title}</a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n  \r\n  export default Dropdown;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Dropdown from './Dropdown';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MenuItems = ({ items, depthLevel }) => {\r\n    const [dropdown, setDropdown] = useState(false);\r\n    let ref = useRef();\r\n\r\n    useEffect(() => {\r\n        const handler = (event) => {\r\n            if (dropdown && ref.current && !ref.current.contains(event.target)) {\r\n                setDropdown(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handler);\r\n        document.addEventListener(\"touchstart\", handler);\r\n        return () => {\r\n            // Cleanup the event listener\r\n            document.removeEventListener(\"mousedown\", handler);\r\n            document.removeEventListener(\"touchstart\", handler);\r\n        };\r\n    }, [dropdown]);\r\n\r\n    const onMouseEnter = () => {\r\n        setDropdown(true);\r\n    };\r\n\r\n    const onMouseLeave = () => {\r\n        setDropdown(false);\r\n    };\r\n\r\n    const toggleDropdown = () => {\r\n        setDropdown((prev) => !prev);\r\n    };\r\n\r\n    const closeDropdown = () => {\r\n        dropdown && setDropdown(false);\r\n    };\r\n\r\n    return (\r\n        <li\r\n            className=\"menu-items\"\r\n            ref={ref}\r\n            onMouseEnter={onMouseEnter}\r\n            onMouseLeave={onMouseLeave}\r\n            onClick={closeDropdown}>\r\n            {items.url && items.submenu ? (\r\n                <>\r\n                    <button\r\n                        type=\"button\"\r\n                        aria-haspopup=\"menu\"\r\n                        aria-expanded={dropdown ? \"true\" : \"false\"}\r\n                        onClick={() => toggleDropdown()}>\r\n                        <Link to={items.url}>{items.title}</Link>\r\n                        {depthLevel > 0 ? <span>&raquo;</span> : <span className='arrow' />}\r\n                    </button>\r\n                    <Dropdown depthLevel={depthLevel} submenus={items.submenu} dropdown={dropdown} />\r\n                </>\r\n            ) : !items.url && items.submenu ? (\r\n                <>\r\n                    <button\r\n                        type=\"button\"\r\n                        aria-haspopup=\"menu\"\r\n                        aria-expanded={dropdown ? \"true\" : \"false\"}>\r\n                        {items.title}\r\n                        {depthLevel > 0 ? <span>&raquo;</span> : <span className='arrow' />}\r\n                    </button>\r\n                    <Dropdown\r\n                        depthLevel={depthLevel}\r\n                        submenus={items.submenu}\r\n                        dropdown={dropdown}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <Link to={items.url}>{items.title}</Link>\r\n            )}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default MenuItems;","import React from 'react';\r\nimport { menuItemsData } from '../menuItemsData';\r\nimport MenuItems from './MenuItems';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"desktop-nav\">\r\n            <ul className=\"menus\">\r\n                {menuItemsData.map((menu, index) => {\r\n                    return <MenuItems items={menu} key={index} />;\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport MobileMenuItems from \"./MobileMenuItems\";\r\n\r\nconst MobileDropdown = ({ submenus, dropdown, depthLevel }) => {\r\n  depthLevel = depthLevel + 1;\r\n  const dropdownClass = depthLevel > 1 ? \"dropdown-submenu\" : \"\";\r\n\r\n  return (\r\n    <ul className={`dropdown ${dropdownClass} ${dropdown ? \"show\" : \"\"}`}>\r\n      {submenus.map((submenu, index) => (\r\n        <MobileMenuItems items={submenu} key={index} depthLevel={depthLevel} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MobileDropdown;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MobileDropdown from \"./MobileDropdown\";\r\n\r\nconst MobileMenuItems = ({ items, depthLevel, showMenu, setShowMenu }) => {\r\n  const [dropdown, setDropdown] = useState(false);\r\n\r\n  const closeDropdown = () => {\r\n    dropdown && setDropdown(false);\r\n    showMenu && setShowMenu(false);\r\n  };\r\n\r\n  const toggleDropdown = (e) => {\r\n    e.stopPropagation();\r\n    setDropdown((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <li className=\"menu-items\" onClick={closeDropdown}>\r\n      {items.url && items.submenu ? (\r\n        <>\r\n          <button\r\n            type=\"button\"\r\n            aria-haspopup=\"menu\"\r\n            aria-expanded={dropdown ? \"true\" : \"false\"}>\r\n            <Link to={items.url} onClick={closeDropdown}>\r\n              {items.title}\r\n            </Link>\r\n            <div onClick={(e) => toggleDropdown(e)}>\r\n              {dropdown ? (\r\n                <span className=\"arrow-close\" />\r\n              ) : (\r\n                <span className=\"arrow\" />\r\n              )}\r\n            </div>\r\n          </button>\r\n          <MobileDropdown\r\n            depthLevel={depthLevel}\r\n            submenus={items.submenu}\r\n            dropdown={dropdown}\r\n          />\r\n        </>\r\n      ) : !items.url && items.submenu ? (\r\n        <>\r\n          <button\r\n            type=\"button\"\r\n            aria-haspopup=\"menu\"\r\n            aria-expanded={dropdown ? \"true\" : \"false\"}>\r\n            {items.title}{\" \"}\r\n            <div onClick={(e) => toggleDropdown(e)}>\r\n              {dropdown ? (\r\n                <span className=\"arrow-close\" />\r\n              ) : (\r\n                <span className=\"arrow\" />\r\n              )}\r\n            </div>\r\n          </button>\r\n          <MobileDropdown\r\n            depthLevel={depthLevel}\r\n            submenus={items.submenu}\r\n            dropdown={dropdown}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Link to={items.url}>{items.title}</Link>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MobileMenuItems;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { menuItemsData } from \"../menuItemsData\";\r\nimport MobileMenuItems from \"./MobileMenuItems\";\r\n\r\nconst MobileNav = () => {\r\n  const depthLevel = 0;\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  let ref = useRef();\r\n\r\n  useEffect(() => {\r\n    const handler = (event) => {\r\n      if (showMenu && ref.current && !ref.current.contains(event.target)) {\r\n        setShowMenu(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handler);\r\n    document.addEventListener(\"touchstart\", handler);\r\n    return () => {\r\n      // Cleanup the event listener\r\n      document.removeEventListener(\"mousedown\", handler);\r\n      document.removeEventListener(\"touchstart\", handler);\r\n    };\r\n  }, [showMenu]);\r\n\r\n  return (\r\n    <nav className=\"mobile-nav\">\r\n      <button\r\n        className=\"mobile-nav__menu-button\"\r\n        type=\"button\"\r\n        onClick={() => setShowMenu((prev) => !prev)}>\r\n        Menu\r\n      </button>\r\n\r\n      {showMenu && (\r\n        <ul className=\"menus\" ref={ref}>\r\n          {menuItemsData.map((menu, index) => {\r\n            return (\r\n              <MobileMenuItems\r\n                items={menu}\r\n                key={index}\r\n                depthLevel={depthLevel}\r\n                showMenu={showMenu}\r\n                setShowMenu={setShowMenu}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MobileNav;","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport MobileNav from './MobileNav';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div className='nav-area'>\r\n                <Link to='/' className='logo'>\r\n                    Logo\r\n                </Link>\r\n                {/* for large screens */}\r\n                <Navbar />\r\n                {/* for small screens */}\r\n                <MobileNav />\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\n\r\nexport default function Root() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className='content'>\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst ErrorPage = () => {\r\n    return <h2>Error Page !!!</h2>;\r\n}\r\n\r\nexport default ErrorPage;","import React, { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\n\r\nconst MyInfo = () => {\r\n    const [csvData, setCsvData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Replace 'your-file.csv' with the path or URL to your CSV file\r\n        const csvFilePath = './data/sample_org.csv';\r\n\r\n        // Fetch the CSV file\r\n        fetch(csvFilePath)\r\n        .then((res) => res.text())\r\n        .then((csvText) => {\r\n            // Parse the CSV text\r\n            Papa.parse(csvText, {\r\n                complete: (res) => {\r\n                    // 'res.data' contains the parsed CSV data\r\n                    setCsvData(res.data);\r\n                    console.log(res.data);\r\n                },\r\n                header: true, // Set to true if your CSV file has a header row\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error fetching or parsing CSV file:', error);\r\n        });\r\n    }, []); // The empty dependency array ensures that this effect runs only once, similar to componentDidMount\r\n\r\n    return (\r\n        <div>\r\n            <h2>Parsed CSV Data:</h2>\r\n            <ul>\r\n                {csvData.map((row, index) => (\r\n                    <li key={index}>{JSON.stringify(row)}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyInfo;","import React from 'react';\r\n\r\nconst Sales = () => {\r\n    return <h2>세일즈 역량</h2>\r\n}\r\n\r\nexport default Sales;","import React from 'react';\r\n\r\nconst SalesSelf = () => {\r\n    return <h2>세일즈 역량 본인평가</h2>\r\n}\r\n\r\nexport default SalesSelf;","import React from 'react';\r\n\r\nconst SalesManager = () => {\r\n    return <h2>세일즈 역량 매니저 평가</h2>\r\n}\r\n\r\nexport default SalesManager;","import React from 'react';\r\n\r\nconst SalesResult = () => {\r\n    return <h2>세일즈 역량 평가 결과 확인</h2>\r\n}\r\n\r\nexport default SalesResult;","import React from 'react';\r\n\r\nconst Promo = () => {\r\n    return <h2>승급</h2>\r\n}\r\n\r\nexport default Promo;","import React from 'react';\r\n\r\nconst PromoSelf = () => {\r\n    return <h2>승급 본인 평가</h2>\r\n}\r\n\r\nexport default PromoSelf;","import React from 'react';\r\n\r\nconst PromoManager = () => {\r\n    return <h2>승급 매니저 평가</h2>\r\n}\r\n\r\nexport default PromoManager;","import React from 'react';\r\n\r\nconst PromoResult = () => {\r\n    return <h2>승급 평가 결과 확인</h2>\r\n}\r\n\r\nexport default PromoResult;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// routes\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Root from \"./routes/root\";\nimport ErrorPage from \"./error-page\";\nimport MyInfo from \"./routes/myinfo\";\nimport Sales from \"./routes/sales\";\nimport SalesSelf from \"./routes/sales-self\";\nimport SalesManager from \"./routes/sales-manager\";\nimport SalesResult from \"./routes/sales-result\";\nimport Promo from \"./routes/promo\";\nimport PromoSelf from \"./routes/promo-self\";\nimport PromoManager from \"./routes/promo-manager\";\nimport PromoResult from \"./routes/promo-result\";\n\n// styles\nimport './App.css';\n\nconst router = createBrowserRouter([\n  {\n    element: <Root />,\n    errorElement: <ErrorPage />,\n    children: [\n      {\n        path: \"/\",\n        element: <App />,\n      },\n      {\n        path: \"myinfo\",\n        element: <MyInfo />,\n      },\n      {\n        path: \"sales\",\n        element: <Sales />,\n      },\n      {\n        path: \"sales-self\",\n        element: <SalesSelf />,\n      },\n      {\n        path: \"sales-manager\",\n        element: <SalesManager />,\n      },\n      {\n        path: \"promo\",\n        element: <Promo />,\n      },\n      {\n        path: \"promo-self\",\n        element: <PromoSelf />,\n      },\n      {\n        path: \"promo-manager\",\n        element: <PromoManager />,\n      },\n      {\n        path: \"sales-result\",\n        element: <SalesResult />,\n      },\n      {\n        path: \"promo-result\",\n        element: <PromoResult />,\n      },\n    ],\n  },\n]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}